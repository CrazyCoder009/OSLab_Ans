#include<iostream> 
#include<iomanip>
using namespace std; 
void findWaitingTime(int processes[], int n,int bt[], int wt[], int quantum) 
{ 
	int rem_bt[n]; 
	for (int i = 0 ; i < n ; i++) 
		rem_bt[i] = bt[i]; 
	int t = 0; 
	while (1) 
	{ 
		bool done = true; 
		for (int i = 0 ; i < n; i++) 
		{ 
			if (rem_bt[i] > 0) 
			{ 
				done = false;
				if (rem_bt[i] > quantum) 
				{ 
					t += quantum; 
					rem_bt[i] -= quantum; 
				} 
				else
				{ 
					t = t + rem_bt[i]; 
					wt[i] = t - bt[i]; 
					rem_bt[i] = 0; 
				} 
			} 
		} 

		if (done == true) 
		break; 
	} 
} 

void findTurnAroundTime(int processes[], int n,int bt[], int wt[], int tat[]) 
{ 
	for (int i = 0; i < n ; i++) 
		tat[i] = bt[i] + wt[i]; 
} 
void findavgTime(int processes[], int n, int bt[],int quantum,string name[]) 
{ 
	int wt[n], tat[n], total_wt = 0, total_tat = 0; 
	findWaitingTime(processes, n, bt, wt, quantum); 
	findTurnAroundTime(processes, n, bt, wt, tat); 
    cout<<"Waiting Time\n";
	for (int i=0; i<n; i++) 
	{ 
		total_wt = total_wt + wt[i];  
  	    cout<<"Time Taken for "<<name[i]<<"="<<wt[i]<<endl;
	}
  cout<<setprecision(6)<<fixed;
  	cout<<"Average Waiting Time="<<(float)total_wt/(float)n;
    cout<<"\nTurnAround Time\n";
	for (int i=0; i<n; i++) 
	{ 
		total_tat = total_tat + tat[i];  
  	    cout<<"Time Taken for "<<name[i]<<"="<<tat[i]<<endl;
    }
	cout << "Average TurnAround Time="<< (float)total_tat / (float)n; 
} 
int main() 
{
  int k;
  cin>>k;
  int processes[k];
  string name[k];
  for(int i=0;i<k;i++)
    cin>>name[i];
  for(int i=0;i<k;i++)
    processes[i]=i;
  int n = sizeof processes / sizeof processes[0]; 
  int burst_time[k];
  for(int i=0;i<k;i++)
    cin>>burst_time[i];
  int arr[k];
  for(int i=0;i<k;i++)
    cin>>arr[i];
  int quantum;
  cin>>quantum;
  findavgTime(processes, n, burst_time, quantum,name); 
  return 0; 
} 

/rrn